# Generated by Django 4.2.7 on 2025-07-12 19:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FaceDetectionSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tolerance', models.FloatField(default=0.6, help_text='Face recognition tolerance (0.0 to 1.0, lower is more strict)')),
                ('min_face_size', models.IntegerField(default=100, help_text='Minimum face size in pixels')),
                ('max_file_size', models.IntegerField(default=10485760, help_text='Maximum file size in bytes')),
                ('allowed_formats', models.JSONField(default=list, help_text='Allowed image formats')),
                ('quality_threshold', models.FloatField(default=0.5, help_text='Minimum image quality threshold')),
                ('blur_threshold', models.FloatField(default=100.0, help_text='Minimum blur threshold (higher is sharper)')),
                ('brightness_min', models.FloatField(default=50.0, help_text='Minimum brightness threshold')),
                ('brightness_max', models.FloatField(default=200.0, help_text='Maximum brightness threshold')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Face Detection Settings',
                'verbose_name_plural': 'Face Detection Settings',
                'db_table': 'face_detection_settings',
            },
        ),
        migrations.CreateModel(
            name='FaceRecognitionStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_attempts', models.IntegerField(default=0)),
                ('successful_recognitions', models.IntegerField(default=0)),
                ('failed_recognitions', models.IntegerField(default=0)),
                ('success_rate', models.FloatField(default=0.0)),
                ('last_recognition', models.DateTimeField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='face_recognition_stats', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Face Recognition Statistics',
                'verbose_name_plural': 'Face Recognition Statistics',
                'db_table': 'face_recognition_stats',
            },
        ),
        migrations.CreateModel(
            name='FaceRecognitionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('success', 'Success'), ('failed', 'Failed'), ('no_face', 'No Face Detected'), ('multiple_faces', 'Multiple Faces Detected'), ('poor_quality', 'Poor Image Quality')], max_length=20)),
                ('confidence_score', models.FloatField(default=0.0)),
                ('image', models.ImageField(blank=True, null=True, upload_to='recognition_logs/')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recognition_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Face Recognition Log',
                'verbose_name_plural': 'Face Recognition Logs',
                'db_table': 'face_recognition_logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='FaceImageHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='face_history/')),
                ('confidence_score', models.FloatField(default=0.0)),
                ('quality_score', models.FloatField(default=0.0)),
                ('is_approved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_faces', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='face_image_history', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Face Image History',
                'verbose_name_plural': 'Face Image History',
                'db_table': 'face_image_history',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FaceEncoding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('encoding', models.JSONField(help_text='Face encoding as JSON array')),
                ('image', models.ImageField(blank=True, null=True, upload_to='face_images/')),
                ('confidence_score', models.FloatField(default=0.0, help_text='Confidence score of face detection')),
                ('quality_score', models.FloatField(default=0.0, help_text='Quality score of the image')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='face_encoding', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Face Encoding',
                'verbose_name_plural': 'Face Encodings',
                'db_table': 'face_encodings',
            },
        ),
    ]
